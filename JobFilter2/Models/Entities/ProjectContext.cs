// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace JobFilter2.Models.Entities
{
    public partial class ProjectContext : DbContext
    {
        public ProjectContext()
        {
        }

        public ProjectContext(DbContextOptions<ProjectContext> options)
            : base(options)
        {
        }

        public virtual DbSet<BlockCompany> BlockCompany { get; set; }
        public virtual DbSet<BlockJobItem> BlockJobItem { get; set; }
        public virtual DbSet<CrawlSetting> CrawlSetting { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<BlockCompany>(entity =>
            {
                entity.Property(e => e.Id).HasComment("資料編號");

                entity.Property(e => e.BlockReason)
                    .HasMaxLength(200)
                    .HasComment("封鎖理由");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(200)
                    .HasComment("公司名稱");
            });

            modelBuilder.Entity<BlockJobItem>(entity =>
            {
                entity.Property(e => e.Id).HasComment("資料編號");

                entity.Property(e => e.JobCode)
                    .HasMaxLength(200)
                    .HasComment("職缺編號");
            });

            modelBuilder.Entity<CrawlSetting>(entity =>
            {
                entity.Property(e => e.Id).HasComment("資料編號");

                entity.Property(e => e.ExcludeWords)
                    .HasMaxLength(500)
                    .HasComment("排除關鍵字(以逗號區隔)");

                entity.Property(e => e.HasSalary)
                    .HasMaxLength(500)
                    .HasComment("是否有寫薪水(意即是否排除面議)");

                entity.Property(e => e.IncludeWords)
                    .HasMaxLength(500)
                    .HasComment("包含關鍵字(以逗號區隔)");

                entity.Property(e => e.MaxSalary).HasComment("最高月薪(不得低於)");

                entity.Property(e => e.MinSalary).HasComment("最低月薪(不得低於)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(500)
                    .HasComment("設定說明");

                entity.Property(e => e.Seniority)
                    .HasMaxLength(100)
                    .HasComment("年資");

                entity.Property(e => e.TargetUrl)
                    .HasMaxLength(1500)
                    .HasComment("目標網址");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}